#!/bin/sh

# OE Build Environment Setup Script
#
# Copyright (C) 2006-2011 Linux Foundation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

if [ -z "$BUILDDIR" ]; then
    echo >&2 "Error: The build directory (BUILDDIR) must be set!"
    exit 1
fi

mkdir -p $BUILDDIR/conf
cp $OEROOT/meta-altera/scripts/env.sh $BUILDDIR/env.sh
echo "OEROOT=$OEROOT"
sed -i "s^__OEROOT__^$OEROOT^" $BUILDDIR/env.sh

chmod a+x $BUILDDIR/env.sh

if ! (test -d "$BUILDDIR"); then
    echo >&2 "Error: The builddir ($BUILDDIR) does not exist!"
    exit 1
fi

if ! (test -w "$BUILDDIR"); then
    echo >&2 "Error: Cannot write to $BUILDDIR, perhaps try sourcing with a writable path? i.e. . oe-init-build-env ~/my-build"
    exit 1
fi

cd "$BUILDDIR"

TEMPLATECONF=${TEMPLATECONF:-meta-altera/conf}

# 
# $TEMPLATECONF can point to a directory for the template local.conf & bblayers.conf
#
if [ "x" != "x$TEMPLATECONF" ]; then
    if ! (test -d "$TEMPLATECONF"); then
	# Allow TEMPLATECONF=meta-xyz/conf as a shortcut
	if [ -d "$OEROOT/$TEMPLATECONF" ]; then
	    TEMPLATECONF="$OEROOT/$TEMPLATECONF"
	fi
	if ! (test -d "$TEMPLATECONF"); then
	    echo >&2 "Error: '$TEMPLATECONF' must be a directory containing local.conf & bblayers.conf"
	    return
	fi
    fi
    OECORELAYERCONF="$TEMPLATECONF/bblayers.conf.sample"
    OECORELOCALCONF="$TEMPLATECONF/local.conf.sample"
    OECORESITECONF="$TEMPLATECONF/site.conf.sample"
fi

if [ "x" = "x$OECORELOCALCONF" ]; then
    OECORELOCALCONF="$OEROOT/meta/conf/local.conf.sample"
fi
if ! (test -r "$BUILDDIR/conf/local.conf"); then
cat <<EOM
A new build directory has been created with a conf subdirectory. This 
contains the default configuration for building for altera hardware. 
You can modify the conf/local.conf file to adjust various settings, such 
as building with an initramfs.
EOM
    cp -f $OECORELOCALCONF $BUILDDIR/conf/local.conf
fi

if [ "x" = "x$OECORELAYERCONF" ]; then
    OECORELAYERCONF="$OEROOT/meta/conf/bblayers.conf.sample"
fi
if ! (test -r "$BUILDDIR/conf/bblayers.conf"); then
    # Put the abosolute path to the layers in bblayers.conf so we can run
    # bitbake without the init script after the first run
    sed "s|##COREBASE##|$OEROOT|g" $OECORELAYERCONF > $BUILDDIR/conf/bblayers.conf
fi
if !(test -r "$BUILDDIR/conf/site.conf") && (test -r "$OECORESITECONF"); then
   cp -f $OECORESITECONF $BUILDDIR/conf/site.conf
fi

# Prevent disturbing a new GIT clone in same console
unset OECORELOCALCONF
unset OECORELAYERCONF

cat <<EOM

### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
	bitbake virtual/kernel
	bitbake virtual/bootloader
	bitbake altera-image
EOM
